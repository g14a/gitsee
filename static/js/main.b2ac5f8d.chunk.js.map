{"version":3,"sources":["components/Constants.js","components/SearchField.js","components/ProfileComponent.js","components/StatComponents/RepoForksComponent.js","components/StatComponents/RepoStarsComponent.js","components/StatComponents/RepoLanguagesComponent.js","components/StatComponents/PrimaryLanguageStarsComponent.js","components/StatComponents/CalendarHeatMap.js","components/GridComponent.js","components/PageComponent.js","App.js","serviceWorker.js","index.js"],"names":["httpURL","UserSearchForm","handleSubmit","event","preventDefault","username","props","Axios","get","URL","then","response","history","push","catch","error","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","slidingExit","timingFunction","delay","style","marginTop","maxHeight","maxWidth","marginLeft","color","onSubmit","this","TextField","id","label","placeholder","name","onChange","handleInputChange","InputProps","InputLabelProps","Component","withRouter","ProfileComponent","state","data","location","setState","Card","width","backgroundColor","margin","Img","variant","src","avatar_url","Body","Text","fontSize","Subtitle","created_at","followers","Link","href","url","target","display","ChartComponent","doughnutData","loading","user","request","backgroundColors","labels","Object","keys","forEach","k","v","GetColorSet","colorSet","language","irr","dataSetItem","borderColor","borderWidth","datasets","doughnutState","CircularProgress","options","responsive","text","fontColor","legend","position","boxWidth","align","height","CalendarHeatMap","getTooltipDataAttrs","value","count","date","heatMapData","contributionArray","contributions","startDate","endDate","length","today","Date","toISOString","split","setFullYear","getFullYear","setDate","getDate","values","classForValue","tooltipDataAttrs","GridComponent","Row","marginBottom","Col","xs","md","minHeight","marginRight","RepoLanguagesComponent","PrimaryLanguageStarsComponent","RepoForksComponent","RepoStarsComponent","PageComponent","Container","fluid","textAlign","overflowY","right","Footer","className","App","Helmet","charSet","exact","path","component","userProps","match","params","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.b2ac5f8d.chunk.js","sourcesContent":["export const httpURL = \"https://gitsee-14a.herokuapp.com\"\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Axios from 'axios';\nimport { store } from 'react-notifications-component';\nimport { withRouter } from 'react-router-dom';\nimport 'react-notifications-component/dist/theme.css'\nimport  * as URL from './Constants'\n\nclass UserSearchForm extends Component {\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const username = this.props.username\n        Axios.get(`${URL.httpURL}/user/${username}`)\n            .then(response => {\n                this.props.history.push(`/gitsee/user/${this.props.username}`);\n            })\n            .catch(error => {\n                store.addNotification({\n                    title: \"Error\",\n                    message: \"Could not find the user!\",\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-right\",\n                    animationIn: [\"fadeIn\"],\n                    animationOut: [\"fadeOut\"],\n                    dismiss: {\n                        duration: 500,\n                        onScreen: true\n                    },\n                    slidingExit: {\n                        duration: 800,\n                        timingFunction: 'ease-out',\n                        delay: 0\n                    }\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: '100px', maxHeight: '50%', maxWidth: '50%', marginLeft: '24%' }}>\n                <h1 style={{ color: 'white' }}>\n                    Enter GitHub Username\n                  </h1>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField id=\"standard-basic\"\n                        label=\"username\"\n                        placeholder=\"ex: g14a\"\n                        name=\"username\"\n                        onChange={this.props.handleInputChange}\n                        InputProps={{\n                            style: { color: 'white' },\n                        }}\n                        InputLabelProps={{ style: { color: 'white' } }}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UserSearchForm);","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Axios from 'axios';\nimport * as URL from './Constants'\n\nclass ProfileComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: {},\n    }\n  }\n\n  componentDidMount() {\n    Axios.get(`${URL.httpURL}/user/${this.props.username}`)\n      .then(response => {\n        if (response.data.location === \"\") {\n          this.setState({\n            data: {\n              ...this.state.data,\n              location: \"\"\n            }\n          })\n        }\n        this.setState({\n          data: response.data\n        })\n      })\n  }\n\n  render() {\n\n    return (\n      <Card\n        style={{\n          width: \"12rem\",\n          backgroundColor: \"#121212\",\n          margin: \"0 auto\",\n          marginTop: \"10vh\"\n        }}\n      >\n        <Card.Img\n          variant=\"top\"\n          src={this.state.data.avatar_url}\n        />\n        <Card.Body>\n          <Card.Text style={{ fontSize: \"18px\", color: \"white\" }}>\n            {this.state.data.username}\n          </Card.Text>\n          <Card.Subtitle style={{ fontSize: \"13px\", color: \"white\" }}>\n            <AccessTimeIcon style={{ fontSize: 'medium' }} />\n            {\" \"} {this.state.data.created_at}\n          </Card.Subtitle>\n          <Card.Text style={{ fontSize: '13px', marginTop: '10px' }}>\n            <LocationOnIcon style={{ fontSize: 'medium' }} />\n            {\" \"}{this.state.data.location}\n          </Card.Text>\n          <Card.Text style={{ fontSize: \"14px\", color: \"white\" }}>\n            {this.state.data.followers} followers\n          </Card.Text>\n          <Card.Link href={this.state.data.url} target=\"_blank\" style={{ fontSize: '18px', display: 'block' }}> Visit on Github </Card.Link>\n        </Card.Body>\n\n      </Card>\n    );\n  }\n}\n\nexport default ProfileComponent;\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  * as URL from '../Constants'\n\nclass ChartComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            doughnutData: '',\n            loading: true,\n        }\n    }\n\n    async GetColorSet(user) {\n        var request = `${URL.httpURL}/user/${user}/colorSet`\n        return Axios.get(request)\n            .then(response => {\n                return response.data\n            })\n    }\n\n    componentDidMount() {\n        Axios.get(`${URL.httpURL}/user/${this.props.username}/stats/RepoForks`)\n            .then(response => {\n                var backgroundColors = []\n                var labels = []\n                var data = []\n                Object.keys(response.data).forEach((k, v) => {\n                    labels.push(k)\n                    data.push(response.data[k])\n                })\n\n                this.GetColorSet(this.props.username)\n                    .then(colorSet => {\n                        Object.keys(colorSet).forEach((language, irr) => {\n                            backgroundColors.push(colorSet[language])\n                        })\n\n                        var dataSetItem = {\n                            backgroundColor: backgroundColors,\n                            data: data,\n                            borderColor: '#808080',\n                            borderWidth: 1\n                        }\n\n                        var datasets = []\n                        datasets.push(dataSetItem)\n                        var doughnutState = {\n                            labels: labels,\n                            datasets: datasets\n                        }\n\n                        this.setState({\n                            doughnutData: doughnutState,\n                            loading: false\n                        })\n\n                    })\n            })\n\n    }\n\n    render() {\n        const { doughnutData, loading } = this.state\n\n        let doughnut;\n\n        if (loading) {\n            doughnut = <CircularProgress color=\"secondary\" style={{marginTop: '28%', marginLeft: '45%'}} />\n        } else {\n            doughnut = <Doughnut\n                data={doughnutData}\n                options={{\n                    responsive: true,\n                    title: {\n                        display: true,\n                        text: 'Forks per Repo',\n                        fontSize: 18,\n                        fontColor: '#fff',\n                    },\n                    legend: {\n                        display: true,\n                        position: 'left',\n                        labels: {\n                            boxWidth: 15,\n                        },\n                        align: 'start',\n                    },\n                }}\n                width={100}\n                height={65}\n            />\n        }\n        return (\n            doughnut\n        );\n    }\n}\n\nexport default ChartComponent\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  * as URL from '../Constants'\n\nclass ChartComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            doughnutData: '',\n            loading: true,\n        }\n    }\n\n    async GetColorSet(user) {\n        var request = `${URL.httpURL}/user/${user}/colorSet`\n        return Axios.get(request)\n            .then(response => {\n                return response.data\n            })\n    }\n\n    componentDidMount() {\n        Axios.get(`${URL.httpURL}/user/${this.props.username}/stats/RepoStars`)\n            .then(response => {\n                var backgroundColors = []\n                var labels = []\n                var data = []\n                Object.keys(response.data).forEach((k, v) => {\n                    labels.push(k)\n                    data.push(response.data[k])\n                })\n\n                this.GetColorSet(this.props.username)\n                    .then(colorSet => {\n                        Object.keys(colorSet).forEach((language, irr) => {\n                            backgroundColors.push(colorSet[language])\n                        })\n\n                        var dataSetItem = {\n                            backgroundColor: backgroundColors,\n                            data: data,\n                            borderColor: '#808080',\n                            borderWidth: 1\n                        }\n\n                        var datasets = []\n                        datasets.push(dataSetItem)\n                        var doughnutState = {\n                            labels: labels,\n                            datasets: datasets\n                        }\n\n                        this.setState({\n                            doughnutData: doughnutState,\n                            loading: false\n                        })\n\n                    })\n            })\n\n    }\n\n    render() {\n        const { doughnutData, loading } = this.state\n\n        let doughnut;\n\n        if (loading) {\n            doughnut = <CircularProgress color=\"secondary\" style={{marginTop: '28%', marginLeft: '45%'}} />\n        } else {\n            doughnut = <Doughnut\n                data={doughnutData}\n                options={{\n                    responsive: true,\n                    title: {\n                        display: true,\n                        text: 'Stars per Repo',\n                        fontSize: 18,\n                        fontColor: '#fff',\n                    },\n                    legend: {\n                        display: true,\n                        position: 'left',\n                        labels: {\n                            boxWidth: 15,\n                        },\n                        align: 'start',\n                    },\n                }}\n                width={100}\n                height={65}\n            />\n        }\n        return (\n            doughnut\n        );\n    }\n}\n\nexport default ChartComponent\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  * as URL from '../Constants'\n\nclass ChartComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            doughnutData: '',\n            loading: true,\n        }\n    }\n\n    async GetColorSet(user) {\n        var request = `${URL.httpURL}/user/${user}/colorSet`\n        return Axios.get(request)\n            .then(response => {\n                return response.data\n            })\n    }\n\n    componentDidMount() {\n        Axios.get(`${URL.httpURL}/user/${this.props.username}/stats/RepoLanguages`)\n            .then(response => {\n                var backgroundColors = []\n                var labels = []\n                var data = []\n                Object.keys(response.data).forEach((k, v) => {\n                    labels.push(k)\n                    data.push(response.data[k])\n                })\n\n                this.GetColorSet(this.props.username)\n                    .then(colorSet => {\n                        Object.keys(colorSet).forEach((language, irr) => {\n                            backgroundColors.push(colorSet[language])\n                        })\n\n                        var dataSetItem = {\n                            backgroundColor: backgroundColors,\n                            data: data,\n                            borderColor: '#808080',\n                            borderWidth: 1\n                        }\n\n                        var datasets = []\n                        datasets.push(dataSetItem)\n                        var doughnutState = {\n                            labels: labels,\n                            datasets: datasets\n                        }\n\n                        this.setState({\n                            doughnutData: doughnutState,\n                            loading: false\n                        })\n\n                    })\n            })\n    }\n\n    render() {\n        const { doughnutData, loading } = this.state\n\n        let doughnut;\n\n        if (loading) {\n            doughnut = <CircularProgress color=\"secondary\" style={{ marginTop: '28%', marginLeft: '45%' }} />\n        } else {\n            doughnut = <Doughnut\n                data={doughnutData}\n                options={{\n                    responsive: true,\n                    title: {\n                        display: true,\n                        text: 'Repos per Language',\n                        fontSize: 18,\n                        fontColor: '#fff',\n                    },\n                    legend: {\n                        display: true,\n                        position: 'left',\n                        labels: {\n                            boxWidth: 15,\n                        },\n                        align: 'start',\n                    },\n                }}\n                width={100}\n                height={65}\n            />\n        }\n        return (\n            doughnut\n        );\n    }\n}\n\nexport default ChartComponent\n","import React, { Component } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  * as URL from '../Constants'\n\nclass ChartComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            doughnutData: '',\n            loading: true,\n        }\n    }\n\n    async GetColorSet(user) {\n        var request = `${URL.httpURL}/user/${user}/colorSet`\n        return Axios.get(request)\n            .then(response => {\n                return response.data\n            })\n    }\n\n    componentDidMount() {\n        Axios.get(`${URL.httpURL}/user/${this.props.username}/stats/PrimaryLanguageStars`)\n            .then(response => {\n                var backgroundColors = []\n                var labels = []\n                var data = []\n                Object.keys(response.data).forEach((k, v) => {\n                    labels.push(k)\n                    data.push(response.data[k])\n                })\n\n                this.GetColorSet(this.props.username)\n                    .then(colorSet => {\n                        Object.keys(colorSet).forEach((language, irr) => {\n                            backgroundColors.push(colorSet[language])\n                        })\n\n                        var dataSetItem = {\n                            backgroundColor: backgroundColors,\n                            data: data,\n                            borderColor: '#808080',\n                            borderWidth: 1\n                        }\n\n                        var datasets = []\n                        datasets.push(dataSetItem)\n                        var doughnutState = {\n                            labels: labels,\n                            datasets: datasets\n                        }\n\n                        this.setState({\n                            doughnutData: doughnutState,\n                            loading: false\n                        })\n\n                    })\n            })\n\n    }\n\n    render() {\n        const { doughnutData, loading } = this.state\n\n        let doughnut;\n\n        if (loading) {\n            doughnut = <CircularProgress color=\"secondary\" style={{marginTop: '28%', marginLeft: '45%'}} />\n        } else {\n            doughnut = <Doughnut\n                data={doughnutData}\n                options={{\n                    responsive: true,\n                    title: {\n                        display: true,\n                        text: 'Stars per Primary Language',\n                        fontSize: 18,\n                        fontColor: '#fff',\n                    },\n                    legend: {\n                        display: true,\n                        position: 'left',\n                        labels: {\n                            boxWidth: 15,\n                        },\n                        align: 'start',\n                    },\n                }}\n                width={100}\n                height={65}\n            />\n        }\n        return (\n            doughnut\n        );\n    }\n}\n\nexport default ChartComponent\n","import React, { Component } from \"react\";\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Axios from 'axios'\nimport * as URL from '../Constants'\nimport \"../../App.css\"\nimport ReactTooltip from 'react-tooltip';\n\nclass CalendarHeatMap extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            heatMapData: [],\n        }\n    }\n\n    getTooltipDataAttrs = (value) => {\n        if (value != null) {\n            if (value.count == null) {\n                value.count = 0\n            }\n            return {\n                'data-tip': `${value.count} contributions on ${value.date}`,\n            };\n        }\n    };\n\n    componentDidMount() {\n        let contributionArray = [];\n\n        Axios.get(`${URL.httpURL}/user/${this.props.username}/stats/Contributions`)\n            .then(response => {\n                Object.keys(response.data).forEach((date, contributions) => {\n                    contributionArray.push({ date: date, count: response.data[date] })\n                })\n                \n                this.setState({\n                    heatMapData: contributionArray,\n                    startDate: contributionArray[0].date,\n                    endDate: contributionArray[contributionArray.length - 1].date\n                })\n            })\n    }\n\n    render() {\n        var today = new Date()\n        var endDate = new Date().toISOString().split('T')[0];\n        var startDate = new Date(today.setFullYear(today.getFullYear() - 1)).setDate(today.getDate() + 2)\n\n        return (\n            <div>\n                <CalendarHeatmap\n                    startDate={startDate}\n                    endDate={endDate}\n                    values={this.state.heatMapData}\n                    classForValue={(value) => {\n                        if (value != null) {\n                            if (value.count === 0) {\n                                return 'color-gitlab-n';\n                            } else if (value.count > 0 && value.count <= 10) {\n                                return 'color-gitlab-1';\n                            } else if (value.count > 10 && value.count <= 20) {\n                                return 'color-gitlab-2';\n                            } else if (value.count > 20 && value.count <= 30) {\n                                return 'color-gitlab-3';\n                            } else if (value.count > 30 && value.count <= 40) {\n                                return 'color-gitlab-4';\n                            }\n                            return 'color-gitlab-4'\n                        }\n                    }}\n                    tooltipDataAttrs={this.getTooltipDataAttrs}\n                />\n                <ReactTooltip />\n            </div>\n        )\n    }\n}\n\nexport default CalendarHeatMap","import React, { Component } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport RepoForksComponent from \"./StatComponents/RepoForksComponent\"\nimport RepoStarsComponent from \"./StatComponents/RepoStarsComponent\"\nimport RepoLanguagesComponent from \"./StatComponents/RepoLanguagesComponent\"\nimport PrimaryLanguageStarsComponent from \"./StatComponents/PrimaryLanguageStarsComponent\"\nimport CalendarHeatMap from './StatComponents/CalendarHeatMap';\n\nclass GridComponent extends Component {\n\n  render() {\n    return (\n      <Row>\n        <h4 style={{ marginTop: '2%', marginLeft: '30%', color: '#fff' }}>Contributions in the last year</h4>\n        <Row style={{ width: '95%', height: '30%', marginLeft: '1%', marginTop: '2%', marginBottom: '5%' }}>\n          <CalendarHeatMap username={this.props.username} />\n        </Row>\n\n        <Col xs={8} md={6}>\n          <Card\n            style={{\n              height: '45vh',\n              minHeight: \"45vh\",\n              marginTop: \"4vh\",\n              backgroundColor: \"#121212\",\n              color: \"white\",\n              marginRight: '10px',\n            }}\n          >\n            <RepoLanguagesComponent username={this.props.username} />\n          </Card>\n        </Col>\n\n        <Col xs={8} md={6}>\n          <Card\n            style={{\n              height: '45vh',\n              minHeight: \"45vh\",\n              marginTop: \"4vh\",\n              backgroundColor: \"#121212\",\n              color: \"white\",\n              marginRight: '10px',\n            }}\n          >\n            <PrimaryLanguageStarsComponent username={this.props.username} />\n          </Card>\n        </Col>\n\n        <Col xs={8} md={6}>\n          <Card\n            style={{\n              height: '45vh',\n              minHeight: \"45vh\",\n              marginTop: \"4vh\",\n              backgroundColor: \"#121212\",\n              color: \"white\",\n              marginRight: '10px',\n            }}\n          >\n            <RepoForksComponent username={this.props.username} />\n          </Card>\n        </Col>\n\n        <Col xs={8} md={6}>\n          <Card\n            style={{\n              height: '48vh',\n              minHeight: \"45vh\",\n              marginTop: \"4vh\",\n              backgroundColor: \"#121212\",\n              color: \"white\",\n              marginRight: '10px',\n            }}\n          >\n            <RepoStarsComponent username={this.props.username} />\n          </Card>\n        </Col>\n\n      </Row>\n    );\n  }\n}\n\nexport default GridComponent;\n","import React, { Component } from \"react\";\nimport ProfileComponent from \"./ProfileComponent\";\nimport GridComponent from \"./GridComponent\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass PageComponent extends Component {\n\n  render() {\n    return (\n      <Container fluid>\n\n        <Row style={{ minHeight: \"100vh\" }}>\n          <Col\n            xs={3}\n            style={{\n              backgroundColor: \"#121212\",\n              fontSize: \"10vh\",\n              textAlign: \"center\",\n              color: \"white\",\n              minHeight: \"100vh\",\n            }}\n          >\n            <ProfileComponent username={this.props.username} />\n          </Col>\n\n          <Col\n            xs={8} md={9}\n            style={{\n              backgroundColor: \"#121212\",\n              position: \"absolute\",\n              overflowY: \"scroll\",\n              minHeight: \"100vh\",\n              maxHeight: \"100vh\",\n              right: \"0\",\n              width: '100%'\n            }}\n          >\n            <GridComponent username={this.props.username} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PageComponent;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport UserSearchFrom from \"./components/SearchField\";\nimport ReactNotification from \"react-notifications-component\";\nimport PageComponent from \"./components/PageComponent\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport {Helmet} from \"react-helmet\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      error: null,\n    };\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Gitsee</title>\n        </Helmet>\n        <BrowserRouter>\n          <Route exact path=\"/gitsee\">\n            <ReactNotification />\n            <UserSearchFrom handleInputChange={this.handleInputChange} username={this.state.username} />\n            <Footer />\n          </Route>\n          <Route exact path=\"/gitsee/user/:username\" component={(userProps) => {\n            return <PageComponent username={userProps.match.params.username} />\n          }} >\n          </Route>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\" style={{ color: \"white\", marginTop: \"30%\" }}>\n      <p>\n        Built with GitHub V4 and React JS. Source is available on{\" \"}\n        <a href=\"https://github.com/g14a/gitsee\" style={{ color: \"white\" }}>\n          Github\n        </a>{\" \"}\n      </p>\n    </footer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}